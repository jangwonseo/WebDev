<?xml version="1.0" encoding="utf-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<mvc:annotation-driven>
		<!-- messageConvertert -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
		            <list>
						<value>text/html; charset=UTF-8</value>	<!-- For Encoding -->
		            </list>
	            </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
                    		<value>application/json; charset=UTF-8</value>	<!-- JSON 형태로 응답 -->
                    </list>
				</property>
            </bean>
        </mvc:message-converters>
	</mvc:annotation-driven>

	<!-- @Component, @Service, @Repository, @Controller 어노테이션이 붙어있는 클래스들을 스프링 빈으로 자동 등록한다. -->
	<context:component-scan base-package="com.neckcompany.neck" />	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 인터셉터 설정 -->
	<bean id="authenticationInterceptor" class="com.neckcompany.neck.common.AuthenticationInterceptor"></bean>
	
	<mvc:interceptors> 
		<mvc:interceptor> 
				<mvc:mapping path="/login/loginPost/**"/> 
<!-- 				<mvc:exclude-mapping path="/login/**"/>  -->
<!-- 				<mvc:exclude-mapping path="/add/**"/>  -->
				<ref bean="authenticationInterceptor"/> 
		</mvc:interceptor> 
	</mvc:interceptors>	

</beans>
