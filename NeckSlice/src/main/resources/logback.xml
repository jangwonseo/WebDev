<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true" scanPeriod="30 seconds">
	 
	<!--5단계의 level이 존재. TRACE라고 선언을 하면 trace,debug,info,warn,error 모든 Level을 포함. 
	그리고 INFO로 설정된다면 info.warn,error이 포함.
	- jdbc.sqltiming : SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. 
	- jdbc.audit : ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별한 경우를 제외하고는 사용을 권장하지 않는다. 
 	- jdbc.resultset : ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.
	-->
	
	<!-- appener는 출력할 곳을 지정하는 태 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern> %d{yyyy-MM-dd HH:mm:ss} %-5level %msg%n </Pattern>
<!-- 			<Pattern> %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n </Pattern> -->
		</layout>
	</appender>

	<logger name="org.hibernate.SQL" level="INFO"></logger>
	<logger name="org.hibernate.type" level="OFF"></logger>
    <logger name="org.hibernate.tool.hbm2ddl" level="OFF"></logger>
    <logger name="org.hibernate.stat" level="OFF"></logger>
    <logger name="org.hibernate.type.BasicTypeRegistry" level="OFF"></logger>

	<!-- in favor of log4jdbc -->
	<logger name="jdbc" level="OFF"/>
    <logger name="jdbc.sqlonly" level="OFF"/>
    <logger name="jdbc.sqltiming" level="OFF"/>
    <logger name="jdbc.audit" level="OFF"/>
    <logger name="jdbc.resultset" level="OFF"/>
    <logger name="jdbc.resultsettable" level="OFF"/>
    <logger name="jdbc.connection" level="OFF"/>
   
    <root level="INFO">
        <appender-ref ref="STDOUT" />
    </root>
    
    <!-- 아래 logger와 같이 name attribute에 logger를 사용할 class 명을 명시해주어야 작동한다.(log4jdbc 사용전)
	log4jdbc에서는 jdbc를 직접 인터셉트하기때문에 아래와같이 일일이 클래스명을 지정해주지 않아도 된다. -->
	<!--
    <logger name="com.neckcompany.neck.board.web.HomeController" level="WARN" additivity="false">
    		<appender-ref ref="STDOUT"></appender-ref>
    </logger>
    <root level="DEBUG"><appender-ref ref="STDOUT" /></root>
	  -->

</configuration>